<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <!--    <context:component-scan base-package="ru.buinovsky.**.repository.datajpa"/>-->
    <!--    <jpa:repositories base-package="ru.buinovsky.**.repository.datajpa"/>-->

    <context:component-scan base-package="ru.buinovsky.**.repository.jpa"/>
    <!--    <context:property-placeholder location="classpath:db/postgres.properties"/>-->
    <context:property-placeholder location="classpath:db/heroku.properties"/>

    <jdbc:initialize-database data-source="dataSource" enabled="${database.init}">
        <jdbc:script location="classpath:db/initDB.sql"/>
        <jdbc:script encoding="utf-8" location="classpath:db/populateDB.sql"/>
    </jdbc:initialize-database>

    <!--Connecting to DB on Heroku-->
    <bean class="java.net.URI" id="dbUrl">
        <constructor-arg value="${DATABASE_URL}"/>
    </bean>

    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource">
        <property name="url" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + @dbUrl.getPath() }"/>
        <property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
        <property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
        <property name="driverClassName" value="org.postgresql.Driver"/>
    </bean>

<!--    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource">-->
<!--        &lt;!&ndash;        class="org.springframework.jdbc.datasource.DriverManagerDataSource"&ndash;&gt;-->
<!--        <property name="driverClassName" value="${database.driverClassName}"/>-->
<!--        <property name="url" value="${database.url}"/>-->
<!--        <property name="username" value="${database.username}"/>-->
<!--        <property name="password" value="${database.password}"/>-->
<!--    </bean>-->

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="ru.buinovsky.**.model"/>

        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="${jpa.showSql}"/>
            </bean>
        </property>

        <property name="jpaProperties">
            <map>
                <entry key="hibernate.format_sql" value="${hibernate.format_sql}"/>
                <entry key="hibernate.use_sql_comments" value="${hibernate.use_sql_comments}"/>
            </map>
        </property>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>
</beans>